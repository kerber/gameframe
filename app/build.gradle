apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    signingConfigs {
        release {
            storeFile file(KEYSTORE_FILE)
            storePassword ""
            keyAlias KEYSTORE_ALIAS
            keyPassword ""
        }
    }

    defaultConfig {
        applicationId "com.savvasdalkitsis.gameframe"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode app_version_code
        versionName app_version
        manifestPlaceholders = [fabric_api_key: FABRIC_API_KEY]
        resValue "string", "facebook_application_id", FACEBOOK_APPLICATION_ID
        resValue "string", "facebook_login_protocol_scheme", FACEBOOK_LOGIN_PROTOCOL_SCHEME
        resValue "string", "twitter_consumer_key", TWITTER_CONSUMER_KEY
        resValue "string", "twitter_consumer_secret", TWITTER_CONSUMER_SECRET
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    return void
}

repositories {
    jcenter()
    maven { url "https://maven.google.com" }
}

dependencies {
    wearApp project(':watch')
    implementation project(':wear')
    implementation project(':home')
    implementation (
            "com.google.android.gms:play-services-auth:$firebase_version",
            "com.google.gms:google-services:$google_services_version",
            "com.android.support:appcompat-v7:$support_version",
            "com.android.support:design:$support_version",
            "com.android.support:cardview-v7:$support_version",
            "uk.co.chrisjenx:calligraphy:$calligraphy_version",
            "com.android.support:multidex:$multidex_version",
            "com.facebook.fresco:fresco:$fresco_version",
            "com.google.firebase:firebase-crash:$gms_version",
    )
    implementation ("com.facebook.android:facebook-android-sdk:4.27.0") {
        exclude group: 'com.facebook.fresco', module: 'drawee'
        exclude group: 'com.android.support', module: 'customtabs'
    }
    implementation("com.twitter.sdk.android:twitter-core:3.0.0@aar") { transitive = true }
    compile "com.google.firebase:firebase-perf:$gms_version"
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(':app:assembleRelease')) {
        android.signingConfigs.release.storePassword = readPass("store")
        android.signingConfigs.release.keyPassword = readPass("key")
    }
}

private static String readPass(String type) {
    def pass
    if (System.console() == null) {
        throw new InvalidUserDataException("Need console to enter password.")
    } else {
        pass = System.console().readPassword("\nPlease enter key passphrase for $type: \n\n")
        pass = new String(pass)
    }

    if (pass.size() <= 0) {
        throw new InvalidUserDataException("You must enter a password to proceed.")
    }
    pass
}

apply plugin: 'com.google.gms.google-services'